"use strict";(self.webpackChunkrevyos_docs_new=self.webpackChunkrevyos_docs_new||[]).push([[12],{713:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"benchmark/lmbench","title":"lmbench for Lpi4A","description":"\u8f6f\u4ef6\u7248\u672c","source":"@site/docs/benchmark/lmbench.md","sourceDirName":"benchmark","slug":"/benchmark/lmbench","permalink":"/revyos-docs-new/docs/benchmark/lmbench","draft":false,"unlisted":false,"editUrl":"https://github.com/kagura114/revyos-docs-new/docs/benchmark/lmbench.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentSidebar","previous":{"title":"glmark2","permalink":"/revyos-docs-new/docs/benchmark/glmark2"},"next":{"title":"p7zip","permalink":"/revyos-docs-new/docs/benchmark/p7zip"}}');var r=s(4848),o=s(8453);const c={},d="lmbench for Lpi4A",i={},a=[{value:"\u8f6f\u4ef6\u7248\u672c",id:"\u8f6f\u4ef6\u7248\u672c",level:2},{value:"\u6d4b\u8bd5\u8bf4\u660e",id:"\u6d4b\u8bd5\u8bf4\u660e",level:2},{value:"\u6d4b\u8bd5\u51c6\u5907",id:"\u6d4b\u8bd5\u51c6\u5907",level:2},{value:"\u6d4b\u8bd5\u6267\u884c",id:"\u6d4b\u8bd5\u6267\u884c",level:2},{value:"\u6d4b\u8bd5\u7ed3\u679c",id:"\u6d4b\u8bd5\u7ed3\u679c",level:2},{value:"\u6d4b\u8bd5\u8bf4\u660e",id:"\u6d4b\u8bd5\u8bf4\u660e-1",level:2}];function l(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"lmbench-for-lpi4a",children:"lmbench for Lpi4A"})}),"\n",(0,r.jsx)(n.h2,{id:"\u8f6f\u4ef6\u7248\u672c",children:"\u8f6f\u4ef6\u7248\u672c"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"lmbench for revyOS"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\u6d4b\u8bd5\u8bf4\u660e",children:"\u6d4b\u8bd5\u8bf4\u660e"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"\u5e26\u5bbd\u6d4b\u8bc4\u5de5\u5177"}),(0,r.jsx)(n.th,{children:"\u53cd\u5e94\u65f6\u95f4\u6d4b\u8bc4\u5de5\u5177"}),(0,r.jsx)(n.th,{children:"\u5176\u4ed6"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u8bfb\u53d6\u7f13\u5b58\u6587\u4ef6"}),(0,r.jsx)(n.td,{children:"\u4e0a\u4e0b\u6587\u5207\u6362"}),(0,r.jsx)(n.td,{children:"\\"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u62f7\u8d1d\u5185\u5b58"}),(0,r.jsx)(n.td,{children:"\u7f51\u7edc\uff1a\u8fde\u63a5\u7684\u5efa\u7acb\uff0c\u7ba1\u9053\uff0cTCP\uff0cUDP \u548cRPC hot potato"}),(0,r.jsx)(n.td,{children:"\\"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u8bfb\u5185\u5b58"}),(0,r.jsx)(n.td,{children:"\u6587\u4ef6\u7cfb\u7edf\u7684\u5efa\u7acb\u548c\u5220\u9664"}),(0,r.jsx)(n.td,{children:"\\"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u5199\u5185\u5b58"}),(0,r.jsx)(n.td,{children:"\u8fdb\u7a0b\u521b\u5efa"}),(0,r.jsx)(n.td,{children:"\u5904\u7406\u5668\u65f6\u949f\u6bd4\u7387\u8ba1\u7b97"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u7ba1\u9053"}),(0,r.jsx)(n.td,{children:"\u4fe1\u53f7\u5904\u7406"}),(0,r.jsx)(n.td,{children:"\\"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"TCP"}),(0,r.jsx)(n.td,{children:"\u4e0a\u5c42\u7684\u7cfb\u7edf\u8c03\u7528"}),(0,r.jsx)(n.td,{children:"\\"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\\"}),(0,r.jsx)(n.td,{children:"\u5185\u5b58\u8bfb\u5165\u53cd\u5e94\u65f6\u95f4"}),(0,r.jsx)(n.td,{children:"\\"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"\u6d4b\u8bd5\u51c6\u5907",children:"\u6d4b\u8bd5\u51c6\u5907"}),"\n",(0,r.jsx)(n.p,{children:"\u4e0b\u8f7d\u6d4b\u8bd5\u5de5\u5177\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git clone https://github.com/revyos/lmbench3.git\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"\u8be5\u7248\u672c\u4e3a\u5df2\u4e3a RevyOS \u79fb\u690d\u7248\u672c\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u5728\u5f00\u59cb\u6d4b\u8bd5\u524d\uff0c\u9700\u8981\u5148\u5b89\u88c5\u4f9d\u8d56\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo apt install gcc make libntirpc-dev -y\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\u6d4b\u8bd5\u6267\u884c",children:"\u6d4b\u8bd5\u6267\u884c"}),"\n",(0,r.jsx)(n.p,{children:"\u6267\u884c\u547d\u4ee4\u8fdb\u884c\u7f16\u8bd1\uff0c\u914d\u7f6e\uff0c\u5e76\u6d4b\u8bd5"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cd lmbench3\ncd src\nmake results\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u6709\u4ee5\u4e0b\u9009\u9879\u63d0\u793a\u9700\u8981\u8bbe\u7f6e\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"\u4ee5\u4e0b\u4e0d\u9700\u8981\u66f4\u6539\u7684\u9879\u76ee\u76f4\u63a5\u56de\u8f66\uff0c\u4f1a\u81ea\u52a8\u8bbe\u7f6e\u9ed8\u8ba4\u503c\u3002"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"MULTIPLE COPIES [default 1]"}),": \u8bbe\u7f6e\u540c\u65f6\u8fd0\u884c lmbench \u7684\u4efd\u6570\uff0c\u4efd\u6570\u591a\u4f1a\u4f7f lmbench \u8fd0\u884c\u7f13\u6162\uff0c\u9ed8\u8ba4\u662f 1\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c 1\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"=====================================================================\n\nIf you are running on an MP machine and you want to try running\nmultiple copies of lmbench in parallel, you can specify how many here.\n\nUsing this option will make the benchmark run 100x slower (sorry).\n\nNOTE:  WARNING! This feature is experimental and many results are \n\tknown to be incorrect or random!\n\nMULTIPLE COPIES [default 1]: \n=====================================================================\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Job placement selection [default 1]"}),": \u4f5c\u4e1a\u8c03\u5ea6\u63a7\u5236\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u503c\u662f 1\uff0c\u8868\u793a\u5141\u8bb8\u4f5c\u4e1a\u8c03\u5ea6\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"=====================================================================\n\nOptions to control job placement\n1) Allow scheduler to place jobs\n2) Assign each benchmark process with any attendent child processes\n   to its own processor\n3) Assign each benchmark process with any attendent child processes\n   to its own processor, except that it will be as far as possible\n   from other processes\n4) Assign each benchmark and attendent processes to their own\n   processors\n5) Assign each benchmark and attendent processes to their own\n   processors, except that they will be as far as possible from\n   each other and other processes\n6) Custom placement: you assign each benchmark process with attendent\n   child processes to processors\n7) Custom placement: you assign each benchmark and attendent\n   processes to processors\n\nNote: some benchmarks, such as bw_pipe, create attendent child\nprocesses for each benchmark process.  For example, bw_pipe\nneeds a second process to send data down the pipe to be read\nby the benchmark process.  If you have three copies of the\nbenchmark process running, then you actually have six processes;\nthree attendent child processes sending data down the pipes and \nthree benchmark processes reading data and doing the measurements.\n\nJob placement selection [default 1]: \n=====================================================================\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Memory"}),": \u8bbe\u7f6e\u6d4b\u8bd5\u5185\u5b58\u5927\u5c0f\uff0c\u9ed8\u8ba4\u662f ",(0,r.jsx)(n.code,{children:"$MB"})," , \u5373\u4e3a\u7a0b\u5e8f\u8ba1\u7b97\u51fa\u6765\u7684\u6700\u5927\u53ef\u6d4b\u8bd5\u5185\u5b58\uff0c\u4e5f\u53ef\u4ee5\u624b\u52a8\u5b9a\u4e49\u6d4b\u8bd5\u503c\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3a\u8fd9\u91cc\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"=====================================================================\n\nSeveral benchmarks operate on a range of memory.  This memory should be\nsized such that it is at least 4 times as big as the external cache[s]\non your system.   It should be no more than 80% of your physical memory.\n\nThe bigger the range, the more accurate the results, but larger sizes\ntake somewhat longer to run the benchmark.\n\nMB [default 686]: \nChecking to see if you have 686 MB; please wait for a moment...\n686MB OK\n686MB OK\n686MB OK\nHang on, we are calculating your cache line size.\nOK, it looks like your cache line is 64 bytes.\n\n=====================================================================\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"SUBSET (ALL|HARWARE|OS|DEVELOPMENT) [default all]"}),": \u8981\u8fd0\u884c\u7684\u6d4b\u8bd5\u96c6\uff0c\u5305\u542b ",(0,r.jsx)(n.code,{children:"ALL/HARWARE/OS/DEVELOPMENT"}),"\uff0c\u9ed8\u8ba4\u9009 ",(0,r.jsx)(n.code,{children:"all"}),"\uff0c\u8fd9\u91cc\u9009 ",(0,r.jsx)(n.code,{children:"all"}),"\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"=====================================================================\n\nlmbench measures a wide variety of system performance, and the full suite\nof benchmarks can take a long time on some platforms.  Consequently, we\noffer the capability to run only predefined subsets of benchmarks, one\nfor operating system specific benchmarks and one for hardware specific\nbenchmarks.  We also offer the option of running only selected benchmarks\nwhich is useful during operating system development.\n\nPlease remember that if you intend to publish the results you either need\nto do a full run or one of the predefined OS or hardware subsets.\n\nSUBSET (ALL|HARWARE|OS|DEVELOPMENT) [default all]: \n=====================================================================\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"FASTMEM [default no]"}),": \u5185\u5b58 ",(0,r.jsx)(n.code,{children:"latency"})," \u6d4b\u8bd5\uff0c\u5982\u679c\u8df3\u8fc7\u8be5\u6d4b\u8bd5\uff0c\u5219\u8bbe\u7f6e\u4e3a ",(0,r.jsx)(n.code,{children:"yes"}),"\uff0c\u5982\u679c\u4e0d\u8df3\u8fc7\u5219\u8bbe\u7f6e\u4e3a ",(0,r.jsx)(n.code,{children:"no"}),"\uff0c\u9ed8\u8ba4\u662f ",(0,r.jsx)(n.code,{children:"no"}),"\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"=====================================================================\n\nThis benchmark measures, by default, memory latency for a number of\ndifferent strides.  That can take a long time and is most useful if you\nare trying to figure out your cache line size or if your cache line size\nis greater than 128 bytes.\n\nIf you are planning on sending in these results, please don't do a fast\nrun.\n\nAnswering yes means that we measure memory latency with a 128 byte stride.  \n\nFASTMEM [default no]: \n=====================================================================\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"SLOWFS [default no]"}),": \u6587\u4ef6\u7cfb\u7edf ",(0,r.jsx)(n.code,{children:"latency"})," \u6d4b\u8bd5\uff0c\u5982\u679c\u8df3\u8fc7\u503c\u8bbe\u7f6e\u4e3a ",(0,r.jsx)(n.code,{children:"yes"}),"\uff0c\u4e0d\u8df3\u8fc7\u8bbe\u7f6e\u4e3a ",(0,r.jsx)(n.code,{children:"no"}),"\uff0c\u9ed8\u8ba4 ",(0,r.jsx)(n.code,{children:"no"}),"\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"=====================================================================\n\nThis benchmark measures, by default, file system latency.  That can\ntake a long time on systems with old style file systems (i.e., UFS,\nFFS, etc.).  Linux' ext2fs and Sun's tmpfs are fast enough that this\ntest is not painful.\n\nIf you are planning on sending in these results, please don't do a fast\nrun.\n\nIf you want to skip the file system latency tests, answer \"yes\" below.\n\nSLOWFS [default no]: \n=====================================================================\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"DISKS [default none]"}),": \u786c\u76d8\u5e26\u5bbd\u548c ",(0,r.jsx)(n.code,{children:"seek time"}),"\uff0c\u9700\u8981\u8bbe\u7f6e\u6d4b\u8bd5\u786c\u76d8\u7684\u76d8\u7b26\uff0c\u4f8b\u5982 ",(0,r.jsx)(n.code,{children:"/dev/sda"}),"\uff0c\u9ed8\u8ba4\u4e0d\u6d4b\u8bd5(\u9ed8\u8ba4 none )\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"=====================================================================\n\nThis benchmark can measure disk zone bandwidths and seek times.  These can\nbe turned into whizzy graphs that pretty much tell you everything you might\nneed to know about the performance of your disk.  \n\nThis takes a while and requires read access to a disk drive.  \nWrite is not measured, see disk.c to see how if you want to do so.\n\nIf you want to skip the disk tests, hit return below.\n\nIf you want to include disk tests, then specify the path to the disk\ndevice, such as /dev/sda.  For each disk that is readable, you'll be\nprompted for a one line description of the drive, i.e., \n\n\tIomega IDE ZIP\nor\n\tHP C3725S 2GB on 10MB/sec NCR SCSI bus\n\nDISKS [default none]: \n=====================================================================\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"REMOTE [default none]"}),": \u7f51\u7edc\u6d4b\u8bd5\uff0c\u9700\u8981 ",(0,r.jsx)(n.code,{children:"2"})," \u53f0\u673a\u5668\u5e76\u8bbe\u7f6e ",(0,r.jsx)(n.code,{children:"rsh"}),"\uff0c\u662f\u6d4b\u8bd5\u673a\u5668\u80fd ",(0,r.jsx)(n.code,{children:"rsh"})," \u8bbf\u95ee\u53e6\u4e00\u53f0\uff0c\u9ed8\u8ba4\u4e0d\u6d4b\u8bd5(\u9ed8\u8ba4 none )\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"=====================================================================\n\nIf you are running on an idle network and there are other, identically\nconfigured systems, on the same wire (no gateway between you and them),\nand you have rsh access to them, then you should run the network part\nof the benchmarks to them.  Please specify any such systems as a space\nseparated list such as: ether-host fddi-host hippi-host.\n\nREMOTE [default none]: \n=====================================================================\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Processor mhz [default 999 MHz, 1.0010 nanosec clock]"}),": \u6d4b\u8bd5 ",(0,r.jsx)(n.code,{children:"cpu"}),"\uff0c\u9ed8\u8ba4 ",(0,r.jsx)(n.code,{children:"$MHZ"}),"\uff0c\u5373\u4e3a\u7a0b\u5e8f\u5224\u65ad\u51fa\u7684\u9891\u7387\uff0c\u4e5f\u53ef\u4ee5\u6839\u636e\u60c5\u51b5\u81ea\u5df1\u8bbe\u5b9a\uff0c\u4f8b\u5982 3500\uff0c\u5355\u4f4d ",(0,r.jsx)(n.code,{children:"MHz"}),"\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"=====================================================================\n\nCalculating mhz, please wait for a moment...\nI think your CPU mhz is \n\n\t999 MHz, 1.0010 nanosec clock\n\t\nbut I am frequently wrong.  If that is the wrong Mhz, type in your\nbest guess as to your processor speed.  It doesn't have to be exact,\nbut if you know it is around 800, say 800.  \n\nPlease note that some processors, such as the P4, have a core which\nis double-clocked, so on those processors the reported clock speed\nwill be roughly double the advertised clock rate.  For example, a\n1.8GHz P4 may be reported as a 3592MHz processor.\n\nProcessor mhz [default 999 MHz, 1.0010 nanosec clock]: \n=====================================================================\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"FSDIR [default /usr/tmp]"}),": \u4e34\u65f6\u76ee\u5f55\u7528\u6765\u5b58\u653e\u6d4b\u8bd5\u6587\u4ef6\uff0c\u53ef\u4ee5\u81ea\u5df1\u8bbe\u5b9a\uff0c\u9ed8\u8ba4 ",(0,r.jsx)(n.code,{children:"/usr/tmp"}),"\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"=====================================================================\n\nWe need a place to store a 686 Mbyte file as well as create and delete a\nlarge number of small files.  We default to /usr/tmp.  If /usr/tmp is a\nmemory resident file system (i.e., tmpfs), pick a different place.\nPlease specify a directory that has enough space and is a local file\nsystem.\n\nFSDIR [default /usr/tmp]: \n=====================================================================\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Status output file [default /dev/tty]"}),": \u6d4b\u8bd5\u8f93\u51fa\u4fe1\u606f\u6587\u4ef6\u5b58\u653e\u76ee\u5f55\uff0c\u53ef\u4ee5\u81ea\u5df1\u8bbe\u5b9a\uff0c\u9ed8\u8ba4 ",(0,r.jsx)(n.code,{children:"/dev/tty"}),"\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"=====================================================================\n\nlmbench outputs status information as it runs various benchmarks.\nBy default this output is sent to /dev/tty, but you may redirect\nit to any file you wish (such as /dev/null...).\n\nStatus output file [default /dev/tty]: \n=====================================================================\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Mail results [default yes]"}),": \u662f\u5426\u5c06\u6d4b\u8bd5\u7ed3\u679c\u90ae\u4ef6\u53d1\u51fa\u6765\uff0c\u9ed8\u8ba4\u662f ",(0,r.jsx)(n.code,{children:"yes"}),"\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3a ",(0,r.jsx)(n.code,{children:"no"}),"\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"=====================================================================\n\nThere is a database of benchmark results that is shipped with new\nreleases of lmbench.  Your results can be included in the database\nif you wish.  The more results the better, especially if they include\nremote networking.  If your results are interesting, i.e., for a new\nfast box, they may be made available on the lmbench web page, which is\n\n\thttp://www.bitmover.com/lmbench\n\nMail results [default yes]: no\nOK, no results mailed.\n=====================================================================\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u4ee5\u4e0a\u9879\u76ee\u8bbe\u7f6e\u5b8c\u6210\u540e\uff0c\u5f00\u59cb\u81ea\u52a8\u6267\u884c\u6d4b\u8bd5\u3002"}),"\n",(0,r.jsx)(n.h2,{id:"\u6d4b\u8bd5\u7ed3\u679c",children:"\u6d4b\u8bd5\u7ed3\u679c"}),"\n",(0,r.jsx)(n.h2,{id:"\u6d4b\u8bd5\u8bf4\u660e-1",children:"\u6d4b\u8bd5\u8bf4\u660e"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>d});var t=s(6540);const r={},o=t.createContext(r);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);