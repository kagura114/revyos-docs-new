"use strict";(self.webpackChunkrevyos_docs_new=self.webpackChunkrevyos_docs_new||[]).push([[4701],{930:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"adaptation/GStreamer\u64ad\u653e\u5668\u9002\u914d","title":"GStreamer Player Porting","description":"Applicable SDK v1.1.2","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/adaptation/GStreamer\u64ad\u653e\u5668\u9002\u914d.md","sourceDirName":"adaptation","slug":"/adaptation/GStreamer\u64ad\u653e\u5668\u9002\u914d","permalink":"/revyos-docs-new/en/docs/adaptation/GStreamer\u64ad\u653e\u5668\u9002\u914d","draft":false,"unlisted":false,"editUrl":"https://github.com/kagura114/revyos-docs-new/tree/main/docs/adaptation/GStreamer\u64ad\u653e\u5668\u9002\u914d.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"GStreamer Player Porting","sidebar_position":1},"sidebar":"documentSidebar","previous":{"title":"T-Head QEMU Compilation Process","permalink":"/revyos-docs-new/en/docs/build/other/thead-qemu\u7f16\u8bd1\u6d41\u7a0b"},"next":{"title":"GStreamer Pipeline Example","permalink":"/revyos-docs-new/en/docs/adaptation/GStreamer-pipeline-example-with-thead-omxil-lib"}}');var r=n(4848),d=n(8453);const o={title:"GStreamer Player Porting",sidebar_position:1},t="Adaptation Documentation for GStreamer Player Supporting PTG omxil Library",l={},a=[{value:"Overview",id:"overview",level:2},{value:"A. GStreamer omxh264dec Decoding Test",id:"a-gstreamer-omxh264dec-decoding-test",level:2},{value:"1. Driver Compilation, Installation, and Hardware Access Permissions",id:"1-driver-compilation-installation-and-hardware-access-permissions",level:3},{value:"1.1 Compile Drivers",id:"11-compile-drivers",level:4},{value:"1.1.1 Alternative Solution",id:"111-alternative-solution",level:5},{value:"1.2 Install Drivers",id:"12-install-drivers",level:4},{value:"1.3 Set Hardware Access Permissions",id:"13-set-hardware-access-permissions",level:4},{value:"RevyOS Adaptation Record",id:"revyos-adaptation-record",level:4},{value:"2. Install <code>vpu-omxil</code> and Adjust Configuration",id:"2-install-vpu-omxil-and-adjust-configuration",level:3},{value:"2.1 Register Components in <code>vpu-omxil</code> with <code>libomxil-bellagio</code>",id:"21-register-components-in-vpu-omxil-with-libomxil-bellagio",level:4},{value:"2.1.1 RevyOS/Debian Component Registration",id:"211-revyosdebian-component-registration",level:5},{value:"2.2 Configure <code>gstomx.conf</code>",id:"22-configure-gstomxconf",level:4},{value:"3. Add <code>dmabuf</code> Patch",id:"3-add-dmabuf-patch",level:3},{value:"4. Initial GStreamer Decoding Test",id:"4-initial-gstreamer-decoding-test",level:3},{value:"RevyOS Compatibility Notes",id:"revyos-compatibility-notes",level:4},{value:"B. Choosing the Right GStreamer <code>video-sink</code>",id:"b-choosing-the-right-gstreamer-video-sink",level:2},{value:"RevyOS Adaptation Notes",id:"revyos-adaptation-notes",level:3},{value:"C. Player Support",id:"c-player-support",level:2},{value:"RevyOS Adaptation Notes",id:"revyos-adaptation-notes-1",level:3},{value:"Summary of RevyOS Adaptation Work",id:"summary-of-revyos-adaptation-work",level:2},{value:"Resources Used",id:"resources-used",level:2}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"adaptation-documentation-for-gstreamer-player-supporting-ptg-omxil-library",children:"Adaptation Documentation for GStreamer Player Supporting PTG omxil Library"})}),"\n",(0,r.jsx)(i.p,{children:"Applicable SDK v1.1.2"}),"\n",(0,r.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(i.p,{children:["PTG's OpenMAX IL library (",(0,r.jsx)(i.code,{children:"vpu-omxil"}),") enables the LicheePi 4A to smoothly perform hardware decoding for 4K 60fps video playback. This document details the integration and usage of the Parole player on the LicheePi 4A development board, providing a guide to the adaptation process on this platform. The workflow for hardware decoding, using H.264 as an example, is shown below."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-plain",children:"                +-------------------------------------------+\n                |    +------------+       +------------+    |   +--------+\nvideo stream----+---\x3e| omxh264dec +------\x3e| video-sink +----+--\x3e| player |\n                |    +------+-----+       +------------+    |   +--------+\n                |           |     GStreamer                 |\n                +-----------+-------------------------------+\n                            |\n                      +-----v-----+\n                      | vpu-omxil |\n                      +-----+-----+\n                            |\n                            |\n                    +-------v-------+\n                    | kernel module |\n                    |    (driver)   |\n                    +-------+-------+\n                            |\n                            v\n                        hardware\n"})}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["The video stream is read into GStreamer, processed, and sent to the ",(0,r.jsx)(i.code,{children:"omxh264dec"})," decoder in GStreamer."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"omxh264dec"})," invokes PTG's ",(0,r.jsx)(i.code,{children:"vpu-omxil"})," library, which accesses the hardware through the driver (kernel module) for hardware decoding."]}),"\n",(0,r.jsx)(i.li,{children:"The decoded stream is then passed to GStreamer's video sink and rendered by the player."}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"a-gstreamer-omxh264dec-decoding-test",children:"A. GStreamer omxh264dec Decoding Test"}),"\n",(0,r.jsxs)(i.p,{children:["To isolate the ",(0,r.jsx)(i.code,{children:"omxh264dec"})," decoding component, the general structure is as follows:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-plain",children:"  +---+------------+----+\n  |   +------------+    |\n  |   | omxh264dec |    |\n  |   +------------+    |\n  |      GStreamer      |\n  +----------+----------+\n             |\n  +----+-----v-----+----+\n  |    +-----------+    |\n  |    | vpu-omxil |    |\n  |    +-----------+    |\n  |  libomxil-bellagio  |\n  +----------+----------+\n             |\n+------------v------------+\n|  - memalloc   - vc8000  |\n|  - hantrodec  - vidmem  |\n|      kernel modules     |\n+------------+------------+\n             |\n             v\n          hardware\n"})}),"\n",(0,r.jsxs)(i.p,{children:["This section focuses on enabling the ",(0,r.jsx)(i.code,{children:"omxh264dec"})," decoder, without involving screen output."]}),"\n",(0,r.jsx)(i.h3,{id:"1-driver-compilation-installation-and-hardware-access-permissions",children:"1. Driver Compilation, Installation, and Hardware Access Permissions"}),"\n",(0,r.jsx)(i.p,{children:"To enable hardware decoding, drivers must be compiled and installed to access the hardware."}),"\n",(0,r.jsx)(i.h4,{id:"11-compile-drivers",children:"1.1 Compile Drivers"}),"\n",(0,r.jsx)(i.p,{children:"PTG-provided driver sources:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://github.com/revyos/vpu-vc8000e-kernel",children:"vpu-vc8000e-kernel"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://github.com/revyos/vpu-vc8000d-kernel",children:"vpu-vc8000d-kernel"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://github.com/revyos/video_memory",children:"video_memory"})}),"\n"]}),"\n",(0,r.jsx)(i.h5,{id:"111-alternative-solution",children:"1.1.1 Alternative Solution"}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.a,{href:"https://github.com/revyos/thead-kernel",children:"revyos/thead-kernel"})," has merged the above modules, so you may avoid compiling these if using ",(0,r.jsx)(i.code,{children:"revyos_defconfig"}),"."]}),"\n",(0,r.jsx)(i.h4,{id:"12-install-drivers",children:"1.2 Install Drivers"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:'# Use depmod to analyze dependencies and create modules.dep in /lib/modules/<kernel-version>.\nsudo depmod -a\nsudo modprobe vidmem vc8000 hantrodec memalloc\n\n# If modprobe fails, try using insmod\n# cd /usr/lib/modules/$(uname -r)\n# sudo insmod $(find . -name *vidmem.ko*)\n# sudo insmod $(find . -name *vc8000.ko*)\n# sudo insmod $(find . -name *hantrodec.ko*)\n# sudo insmod $(find . -name *memalloc.ko*)\n\n# Optional: Load modules at boot\necho -e "\\nvidmem\\nhantrodec\\nmemalloc\\nvc8000\\n" | sudo tee -a /etc/modules > /dev/null\n'})}),"\n",(0,r.jsx)(i.h4,{id:"13-set-hardware-access-permissions",children:"1.3 Set Hardware Access Permissions"}),"\n",(0,r.jsxs)(i.p,{children:["After installing kernel modules, device files for ",(0,r.jsx)(i.code,{children:"hantrodec"}),", ",(0,r.jsx)(i.code,{children:"vidmem"}),", and ",(0,r.jsx)(i.code,{children:"vc8000"})," will appear in ",(0,r.jsx)(i.code,{children:"/dev"}),". By default, users lack access permissions, so non-root users will encounter errors when opening the omxil library."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:'# For one-time effect\ncd /dev\nsudo chmod 666 hantrodec vidmem vc8000\n\n# For persistent effect\ncat << EOF | sudo tee /lib/udev/rules.d/70-hantro.rules > /dev/null\nKERNEL=="vidmem", MODE="0666"\nKERNEL=="hantrodec", MODE="0666"\nKERNEL=="vc8000", MODE="0666"\nEOF\n'})}),"\n",(0,r.jsx)(i.h4,{id:"revyos-adaptation-record",children:"RevyOS Adaptation Record"}),"\n",(0,r.jsxs)(i.p,{children:["For RevyOS-specific kernel modules, go to ",(0,r.jsx)(i.a,{href:"https://github.com/revyos/thead-kernel",children:"revyos/thead-kernel"})," and download artifacts from GitHub CI."]}),"\n",(0,r.jsxs)(i.h3,{id:"2-install-vpu-omxil-and-adjust-configuration",children:["2. Install ",(0,r.jsx)(i.code,{children:"vpu-omxil"})," and Adjust Configuration"]}),"\n",(0,r.jsxs)(i.p,{children:["First, download and extract ",(0,r.jsx)(i.code,{children:"vpu-omxil"})," to ",(0,r.jsx)(i.code,{children:"/usr/lib/omxil/"}),".\n",(0,r.jsx)(i.a,{href:"https://drive.google.com/file/d/1pYgCVI7WltfpskltJ-RqzVUCEC21FS56",children:"Download vpu-omxil_1.2.1.tar.gz"})]}),"\n",(0,r.jsx)(i.p,{children:"As illustrated below, the following steps are required:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["Register the OpenMax components in ",(0,r.jsx)(i.code,{children:"vpu-omxil"})," with ",(0,r.jsx)(i.code,{children:"libomxil-bellagio"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:["Configure ",(0,r.jsx)(i.code,{children:"gst-omx"})," (which provides the ",(0,r.jsx)(i.code,{children:"omxh264dec"})," decoder) to recognize the component names when calling ",(0,r.jsx)(i.code,{children:"libomxil-bellagio"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-plain",children:"+---------+   +-------------------+   +-----------+\n| gst-omx +--\x3e| libomxil-bellagio +--\x3e| vpu-omxil |\n+---------+   +-------------------+   +-----------+\n"})}),"\n",(0,r.jsxs)(i.h4,{id:"21-register-components-in-vpu-omxil-with-libomxil-bellagio",children:["2.1 Register Components in ",(0,r.jsx)(i.code,{children:"vpu-omxil"})," with ",(0,r.jsx)(i.code,{children:"libomxil-bellagio"})]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:"sudo apt install libomxil-bellagio-bin libomxil-bellagio0\n# Register components\nomxregister-bellagio -v /usr/lib/omxil/\n"})}),"\n",(0,r.jsxs)(i.p,{children:["The registration file is generated by ",(0,r.jsx)(i.code,{children:"omxregister-bellagio"})," and, by default, is located at ",(0,r.jsx)(i.code,{children:"~/.omxregister"}),"."]}),"\n",(0,r.jsx)(i.h5,{id:"211-revyosdebian-component-registration",children:"2.1.1 RevyOS/Debian Component Registration"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"https://github.com/revyos/th1520-vpu",children:"th1520-vpu"})," utilizes Debian\u2019s automatic registration process in ",(0,r.jsx)(i.code,{children:"/usr/lib/riscv64-linux-gnu/libomxil-bellagio0"})," upon installation. The resulting registry appears as follows:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-bash",children:"cat /var/lib/libomxil-bellagio0/registry\n/usr/lib/riscv64-linux-gnu/libomxil-bellagio0/libOMX.hantro.H2.video.encoder.so\n ==> OMX.hantro.H2.video.encoder ==> OMX.hantro.H2.video.encoder.avc:OMX.hantro.H2.video.encoder.hevc:\n/usr/lib/riscv64-linux-gnu/libomxil-bellagio0/libOMX.hantro.VC8000D.image.decoder.so\n ==> OMX.hantro.VC8000D.image.decoder ==> OMX.hantro.VC8000D.image.decoder.jpeg:\n/usr/lib/riscv64-linux-gnu/libomxil-bellagio0/libOMX.hantro.H2.image.encoder.so\n ==> OMX.hantro.H2.image.encoder ==> OMX.hantro.H2.image.encoder.jpeg:\n/usr/lib/riscv64-linux-gnu/libomxil-bellagio0/libOMX.hantro.VC8000D.video.decoder.so\n ==> OMX.hantro.VC8000D.video.decoder ==> OMX.hantro.VC8000D.video.decoder.mpeg4:OMX.hantro.VC8000D.video.decoder.avc:OMX.hantro.VC8000D.video.decoder.avs:OMX.hantro.VC8000D.video.decoder.h263:OMX.hantro.VC8000D.video.decoder.wmv:OMX.hantro.VC8000D.video.decoder.vp6:OMX.hantro.VC8000D.video.decoder.vp8:OMX.hantro.VC8000D.video.decoder.jpeg:OMX.hantro.VC8000D.video.decoder.hevc:OMX.hantro.VC8000D.video.decoder.vp9:OMX.hantro.VC8000D.video.decoder.avs2:\n"})}),"\n",(0,r.jsxs)(i.h4,{id:"22-configure-gstomxconf",children:["2.2 Configure ",(0,r.jsx)(i.code,{children:"gstomx.conf"})]}),"\n",(0,r.jsxs)(i.p,{children:["Adjust the ",(0,r.jsx)(i.code,{children:"gstomx.conf"})," settings to ensure the ",(0,r.jsx)(i.code,{children:"omxh264dec"})," decoder calls the correct components. See the following patch for ",(0,r.jsx)(i.code,{children:"gst-omx"})," configuration details:"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"https://gist.github.com/Sakura286/26777ea8204c1819885e093806a4f7ca#file-gst-omx-01-add-libomxil-config-patch",children:"gst-omx-01-add-libomxil-config.patch"})}),"\n",(0,r.jsxs)(i.h3,{id:"3-add-dmabuf-patch",children:["3. Add ",(0,r.jsx)(i.code,{children:"dmabuf"})," Patch"]}),"\n",(0,r.jsxs)(i.p,{children:["Please refer to the ",(0,r.jsx)(i.code,{children:"dmabuf"})," patch for ",(0,r.jsx)(i.code,{children:"gst-omx"})," provided by PTG:"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"https://gist.github.com/Sakura286/26777ea8204c1819885e093806a4f7ca#file-gst-omx-02-set-dec-out-port-dmabuf-patch",children:"gst-omx-02-set-dec-out-port-dmabuf.patch"})}),"\n",(0,r.jsx)(i.h3,{id:"4-initial-gstreamer-decoding-test",children:"4. Initial GStreamer Decoding Test"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:"sudo apt install gstreamer1.0-omx-generic gstreamer1.0-omx-bellagio-config gstreamer1.0-plugins-bad gstreamer1.0-plugins-base gstreamer1.0-gl gstreamer1.0-plugins-good gstreamer1.0-tools\n\n# 1. Basic decoding\ngst-launch-1.0 filesrc location=<test.mp4> ! qtdemux !  h264parse ! omxh264dec  ! videoconvert ! fakesink  sync=false\n# 2. Display FPS in the terminal\n# Reference: https://stackoverflow.com/questions/73948308\ngst-launch-1.0 filesrc location=<test.mp4> ! qtdemux !  h264parse ! omxh264dec  ! videoconvert ! fpsdisplaysink video-sink=fakesink  text-overlay=false sync=false -v 2>&1\n"})}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"fakesink"})," discards all incoming video frames, bypassing the ",(0,r.jsx)(i.code,{children:"video-sink"})," rendering stage to avoid performance loss, while ",(0,r.jsx)(i.code,{children:"fpsdisplaysink"})," provides decoding speed statistics. Sample log output:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-log",children:"Setting pipeline to PAUSED ...[DBGT]\nvc8kdec compiled without trace support (ENABLE_DBGT_TRACE switch not enabled)\nPipeline is PREROLLING ...\nRedistribute latency...\nOMX  ! decoder_get_parameter OMX_ErrorNoMore (2)\nPipeline is PREROLLED ...\nSetting pipeline to PLAYING ...\nNew clock: GstSystemClockRedistribute latency...\n0:01:39.5 / 0:01:49.4 (90.9 %)\n"})}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Tip:"})," If encountering errors such as ",(0,r.jsx)(i.code,{children:"[omxh264dec-omxh264dec0: Could not initialize supporting library.](https://gist.github.com/Sakura286/015fae6792e160268db7ad8a697dd2df)"}),", consider installing the debug-symbol packages for ",(0,r.jsx)(i.code,{children:"gst-omx"}),", ",(0,r.jsx)(i.code,{children:"libomxil-bellagio"}),", and ",(0,r.jsx)(i.code,{children:"libc6"}),". Use ",(0,r.jsx)(i.code,{children:"gdb"})," to troubleshoot by running the command above, setting a breakpoint at ",(0,r.jsx)(i.code,{children:"DWLInit"})," and ",(0,r.jsx)(i.code,{children:"open"})," to pinpoint where the issue arises."]}),"\n",(0,r.jsx)(i.h4,{id:"revyos-compatibility-notes",children:"RevyOS Compatibility Notes"}),"\n",(0,r.jsx)(i.p,{children:"During the RevyOS adaptation process, the following issues were identified as causes for dynamic library initialization failures:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["Incompatible toolchain used when compiling ",(0,r.jsx)(i.code,{children:"vpu-omxil"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:["Missing ",(0,r.jsx)(i.code,{children:"vpu-omxil"})," registration with ",(0,r.jsx)(i.code,{children:"omxregister-bellagio"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:["Insufficient permissions for ",(0,r.jsx)(i.code,{children:"/dev"})," devices ",(0,r.jsx)(i.code,{children:"hantrodec"}),", ",(0,r.jsx)(i.code,{children:"vc8000"}),", and ",(0,r.jsx)(i.code,{children:"vidmem"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(i.h2,{id:"b-choosing-the-right-gstreamer-video-sink",children:["B. Choosing the Right GStreamer ",(0,r.jsx)(i.code,{children:"video-sink"})]}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"video-sink"})," is the last step in the ",(0,r.jsx)(i.a,{href:"https://gstreamer.freedesktop.org/documentation/tutorials/basic/concepts.html",children:"GStreamer pipeline"}),", handling the final output of the video stream to the screen.\nIn the tests above, ",(0,r.jsx)(i.code,{children:"fakesink"})," served as a testing ",(0,r.jsx)(i.code,{children:"video-sink"})," to verify decoder functionality. There are, however, many ",(0,r.jsx)(i.code,{children:"video-sink"})," options available (",(0,r.jsx)(i.a,{href:"https://gstreamer.freedesktop.org/documentation/tutorials/basic/platform-specific-elements.html?gi-language=c",children:"see list"}),"), such as ",(0,r.jsx)(i.code,{children:"autovideosink"}),", ",(0,r.jsx)(i.code,{children:"ximagesink"}),", ",(0,r.jsx)(i.code,{children:"xvimagesink"}),", ",(0,r.jsx)(i.code,{children:"fbdevsink"}),", ",(0,r.jsx)(i.code,{children:"waylandsink"}),", ",(0,r.jsx)(i.code,{children:"glimagesink"}),", ",(0,r.jsx)(i.code,{children:"gtkglsink"}),", each requiring specific installation packages as follows:"]}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:(0,r.jsx)(i.strong,{children:"video-sink"})}),(0,r.jsx)(i.th,{children:(0,r.jsx)(i.strong,{children:"Package"})})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"waylandsink"}),(0,r.jsx)(i.td,{children:"gstreamer1.0-plugins-bad"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"fbdevsink"}),(0,r.jsx)(i.td,{children:"gstreamer1.0-plugins-bad"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"autovideosink"}),(0,r.jsx)(i.td,{children:"gstreamer1.0-plugins-good"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"gtkglsink"}),(0,r.jsx)(i.td,{children:"gstreamer1.0-plugins-good"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"ximagesink | xvimagesink"}),(0,r.jsx)(i.td,{children:"gstreamer1.0-plugins-base"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"glimagesink"}),(0,r.jsx)(i.td,{children:"gstreamer1.0-plugins-base | gstreamer1.0-gl"})]})]})]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Tip:"})," Use ",(0,r.jsx)(i.code,{children:"gst-inspect-1.0 <video-sink-name>"})," to view available options for each ",(0,r.jsx)(i.code,{children:"video-sink"}),".\n",(0,r.jsx)(i.strong,{children:"Tip:"})," Adjust ",(0,r.jsx)(i.code,{children:"--gst-debug-level=<lv>"})," to set the ",(0,r.jsx)(i.a,{href:"https://gstreamer.freedesktop.org/documentation/tutorials/basic/debugging-tools.html#the-debug-log",children:"debug log level"}),", where ",(0,r.jsx)(i.code,{children:"<lv>"})," ranges from 1 to 6, with higher levels providing more verbose output. Setting the level below 4 is recommended, as higher levels can result in very long logs.\nExperiment with different ",(0,r.jsx)(i.code,{children:"video-sink"})," options, plugin parameters, and environmental variables until you find one that enables smooth H.264 hardware decoding."]}),"\n",(0,r.jsx)(i.h3,{id:"revyos-adaptation-notes",children:"RevyOS Adaptation Notes"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"waylandsink"}),": As RevyOS is currently (20230720) using the Xfce desktop environment, Wayland support is not feasible, so ",(0,r.jsx)(i.code,{children:"waylandsink"})," is inherently unusable."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"fbdevsink"})," and ",(0,r.jsx)(i.strong,{children:"ximagesink"}),": Both are unusable."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"xvimagesink"}),": From ",(0,r.jsx)(i.a,{href:"https://gstreamer.freedesktop.org/documentation/tutorials/basic/debugging-tools.html#getting-pipeline-graphs",children:"pipeline graphs"})," and logs, we can see that ",(0,r.jsx)(i.code,{children:"playbin"})," or ",(0,r.jsx)(i.code,{children:"autovideosink"})," automatically calls ",(0,r.jsx)(i.code,{children:"xvimagesink"}),". After analyzing with ",(0,r.jsx)(i.code,{children:"perf"}),", it\u2019s evident that ",(0,r.jsx)(i.code,{children:"xvimagesink"})," involves significant ",(0,r.jsx)(i.code,{children:"memcpy"})," operations, severely impacting decoding performance. This issue persists even with the PTG-provided ",(0,r.jsx)(i.code,{children:"dmabuf"})," patch, so it\u2019s not a viable option."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"gtkglsink"}),": Due to ",(0,r.jsx)(i.a,{href:"https://gitlab.gnome.org/GNOME/gtk/-/issues/738",children:"GTK3\u2019s lack of support for EGL on X11"}),", and as RevyOS is based on X11 and only supports EGL, this option is also unusable."]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["The only remaining option is ",(0,r.jsx)(i.code,{children:"glimagesink"}),". Based on ",(0,r.jsx)(i.a,{href:"https://gstreamer.freedesktop.org/documentation/gstreamer/running.html#environment-variables",children:"Running and debugging GStreamer Applications"})," and examples that use ",(0,r.jsx)(i.code,{children:"glimagesink"}),", it appears necessary to specify the environment variables ",(0,r.jsx)(i.code,{children:"GST_GL_API"})," and ",(0,r.jsx)(i.code,{children:"GST_GL_PLATFORM"}),". Since RevyOS uses a ",(0,r.jsx)(i.code,{children:"gles2"})," + ",(0,r.jsx)(i.code,{children:"egl"})," setup, the following command enables successful hardware decoding:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:"GST_GL_API=gles2 GST_GL_PLATFORM=egl gst-launch-1.0 filesrc location=<test.mp4> ! qtdemux !  h264parse ! omxh264dec  ! videoconvert ! fpsdisplaysink video-sink=glimagesink sync=false\n"})}),"\n",(0,r.jsxs)(i.p,{children:["However, these parameters cannot be passed as environment variables when GStreamer is invoked by a media player. Therefore, it\u2019s essential to pass additional ",(0,r.jsx)(i.code,{children:"meson"})," build options when compiling ",(0,r.jsx)(i.code,{children:"gst-plugins-base"}),":"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:"-Dgl_api=[\\'gles2\\'] -Dgl_platform=[\\'egl\\']\n"})}),"\n",(0,r.jsx)(i.h2,{id:"c-player-support",children:"C. Player Support"}),"\n",(0,r.jsxs)(i.p,{children:["Once the GStreamer pipeline functions correctly, the next step is to enable player support. Different players utilize different ",(0,r.jsx)(i.code,{children:"video-sink"})," elements and have varying levels of dependency on GStreamer. The adaptation strategy for players is to either (1) modify the player to support the verified ",(0,r.jsx)(i.code,{children:"video-sink"})," or (2) modify the GStreamer pipeline to support the player\u2019s specified ",(0,r.jsx)(i.code,{children:"video-sink"}),". The RevyOS adaptation process adopts the first approach."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-plain",children:"                +-------------------------------------------+\n                |    +------------+       +------------+    |   +--------+\nvideo stream----+---\x3e| omxh264dec +------\x3e| video-sink +----+--\x3e| player |\n                |    +------------+       +------------+    |   +--------+\n                |                GStreamer                  |\n                +-------------------------------------------+\n"})}),"\n",(0,r.jsx)(i.h3,{id:"revyos-adaptation-notes-1",children:"RevyOS Adaptation Notes"}),"\n",(0,r.jsxs)(i.p,{children:["Based on the ",(0,r.jsx)(i.a,{href:"https://gstreamer.freedesktop.org/apps/",children:"GStreamer-supported applications list"}),":"]}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Usable"}),(0,r.jsx)(i.th,{children:"Updated"}),(0,r.jsx)(i.th,{children:"Application"}),(0,r.jsx)(i.th,{children:"Notes"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"\u274c"}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"Gnash"}),(0,r.jsx)(i.td,{children:"Flash Player"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"\u274c"}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"GEntrans"}),(0,r.jsx)(i.td,{children:"Not in Debian"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"\u2753"}),(0,r.jsx)(i.td,{children:"20230226"}),(0,r.jsx)(i.td,{children:"Kaffeine"}),(0,r.jsx)(i.td,{children:"\u274c Requires extensive KDE dependencies"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsxs)(i.td,{children:["\u2714\ufe0f Present in the ",(0,r.jsx)(i.a,{href:"https://buildd.debian.org/status/package.php?p=kaffeine&suite=sid",children:"riscv64 repository"})]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"\u274c On Debian amd64 Gnome, the playback and control windows are separated, with VLC as the default player."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"\u274c"}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"Lcdgrilo"}),(0,r.jsx)(i.td,{children:"Not in Debian"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"\u2714\ufe0f"}),(0,r.jsx)(i.td,{children:"20230218"}),(0,r.jsx)(i.td,{children:"Parole"}),(0,r.jsx)(i.td,{children:"\u2714\ufe0f For XFCE"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"\u2753 No Wayland support, X11 only"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"\u2714\ufe0f Verified on Debian amd64 Gnome"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsxs)(i.td,{children:["\u2714\ufe0f Available in the ",(0,r.jsx)(i.a,{href:"https://buildd.debian.org/status/package.php?p=parole&suite=sid",children:"riscv64 repository"})]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"\u274c"}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"Songbird"}),(0,r.jsx)(i.td,{children:"Not in Debian"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"\u274c"}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"Snappy"}),(0,r.jsx)(i.td,{children:"Not in Debian"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"\u274c"}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"Totem"}),(0,r.jsx)(i.td,{children:"Requires GTK3, which doesn\u2019t support EGL on X11"})]})]})]}),"\n",(0,r.jsxs)(i.p,{children:["Totem was initially chosen but proved difficult to support due to its inability to specify a ",(0,r.jsx)(i.code,{children:"video-sink"})," other than ",(0,r.jsx)(i.code,{children:"gtkglsink"}),", which RevyOS does not support. After evaluating GStreamer-compatible players, Parole emerged as a suitable choice. Parole, written with GObject, requires modification in the ",(0,r.jsx)(i.code,{children:"parole_gst_constructed"})," method to set ",(0,r.jsx)(i.code,{children:"video-sink"})," to ",(0,r.jsx)(i.code,{children:"glimagesink"}),", as previously validated. The patch can be found here:"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"https://gist.github.com/Sakura286/26777ea8204c1819885e093806a4f7ca#file-parole-01-add-glimagesink-support-patch",children:"parole-01-add-glimagesink-support.patch"})}),"\n",(0,r.jsx)(i.p,{children:"With this, the preliminary adaptation work is complete."}),"\n",(0,r.jsx)(i.h2,{id:"summary-of-revyos-adaptation-work",children:"Summary of RevyOS Adaptation Work"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:"Compile driver modules into the kernel, enable them at boot, and set device permissions."}),"\n",(0,r.jsxs)(i.li,{children:["Package PTG's ",(0,r.jsx)(i.code,{children:"omxil"})," binary dynamic library files as ",(0,r.jsx)(i.code,{children:"th1520-vpu"}),".","\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["Modify ",(0,r.jsx)(i.code,{children:"th1520-vpu"})," dependencies to require ",(0,r.jsx)(i.code,{children:"gst-omx"}),", ",(0,r.jsx)(i.code,{children:"libomxil-bellagio"}),", etc."]}),"\n",(0,r.jsxs)(i.li,{children:["Add post-install operations, such as registering components with ",(0,r.jsx)(i.code,{children:"omxregister-bellagio"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["Modify ",(0,r.jsx)(i.code,{children:"gst-omx"}),":","\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["Add support for the ",(0,r.jsx)(i.code,{children:"vpu-omxil"})," component in the config."]}),"\n",(0,r.jsxs)(i.li,{children:["Apply ",(0,r.jsx)(i.code,{children:"dmabuf"})," patches."]}),"\n",(0,r.jsx)(i.li,{children:"Add support for h265 and vp9."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["Modify ",(0,r.jsx)(i.code,{children:"gst-base"})," to limit GL support to ",(0,r.jsx)(i.code,{children:"gles2"})," + ",(0,r.jsx)(i.code,{children:"egl"})," during compilation."]}),"\n",(0,r.jsxs)(i.li,{children:["Modify Parole to support ",(0,r.jsx)(i.code,{children:"glimagesink"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"resources-used",children:"Resources Used"}),"\n",(0,r.jsx)(i.p,{children:"Patch collection:"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"https://gist.github.com/Sakura286/26777ea8204c1819885e093806a4f7ca",children:"https://gist.github.com/Sakura286/26777ea8204c1819885e093806a4f7ca"})}),"\n",(0,r.jsx)(i.p,{children:"PTG omxil library:"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"https://drive.google.com/file/d/1pYgCVI7WltfpskltJ-RqzVUCEC21FS56",children:"https://drive.google.com/file/d/1pYgCVI7WltfpskltJ-RqzVUCEC21FS56"})})]})}function h(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>t});var s=n(6540);const r={},d=s.createContext(r);function o(e){const i=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(d.Provider,{value:i},e.children)}}}]);