"use strict";(self.webpackChunkrevyos_docs_new=self.webpackChunkrevyos_docs_new||[]).push([[650],{1879:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"build/other/manuel_build_kernel","title":"Manuel Build Kernel","description":"Build Toolchain Download link:","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/build/other/manuel_build_kernel.md","sourceDirName":"build/other","slug":"/build/other/manuel_build_kernel","permalink":"/revyos-docs-new/en/docs/build/other/manuel_build_kernel","draft":false,"unlisted":false,"editUrl":"https://github.com/kagura114/revyos-docs-new/docs/build/other/manuel_build_kernel.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentSidebar","previous":{"title":"gcc build programs instructions","permalink":"/revyos-docs-new/en/docs/build/other/gcc\u7f16\u8bd1\u8f6f\u4ef6\u8bf4\u660e"},"next":{"title":"T-Head QEMU Compilation Process","permalink":"/revyos-docs-new/en/docs/build/other/thead-qemu\u7f16\u8bd1\u6d41\u7a0b"}}');var s=o(4848),i=o(8453);const t={},l="Manuel Build Kernel",c={},d=[];function u(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"manuel-build-kernel",children:"Manuel Build Kernel"})}),"\n",(0,s.jsx)(n.p,{children:"Build Toolchain Download link:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://occ-oss-prod.oss-cn-hangzhou.aliyuncs.com/resource//1663142514282/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1-20220906.tar.gz",children:"https://occ-oss-prod.oss-cn-hangzhou.aliyuncs.com/resource//1663142514282/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1-20220906.tar.gz"})}),"\n",(0,s.jsxs)(n.p,{children:["Assuming Build environment is ",(0,s.jsx)(n.code,{children:"Ubuntu"})," or ",(0,s.jsx)(n.code,{children:"Debian"})]}),"\n",(0,s.jsx)(n.p,{children:"Install dependency:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo apt install -y gdisk dosfstools g++-12-riscv64-linux-gnu build-essential libncurses-dev gawk flex bison openssl libssl-dev tree dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf device-tree-compiler\n"})}),"\n",(0,s.jsx)(n.p,{children:"Uncompress Toolchain (Assuming install to /opt):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"tar -xvf Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1-20220906.tar.gz -C /opt\n"})}),"\n",(0,s.jsx)(n.p,{children:"Setup environment variables (Assuming Toolchain is in /opt):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'export PATH="/opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1/bin:$PATH"\nexport CROSS_COMPILE=riscv64-unknown-linux-gnu-\nexport ARCH=riscv\n'})}),"\n",(0,s.jsx)(n.p,{children:"Download code using git:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"# Kernel repo\ngit clone https://github.com/revyos/thead-kernel.git\n"})}),"\n",(0,s.jsx)(n.p,{children:"Build Kernel:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"# make install target directory\nmkdir rootfs && mkdir rootfs/boot\n\n# after mkdir, the directory tree should look like this:\n# .. << current workdir\n# |-- rootfs\n#     |-- boot\n# |-- thead-kernel\n#     |-- ...\n\n# enter kernel directory and start build\ncd thead-kernel\nmake CROSS_COMPILE=riscv64-unknown-linux-gnu- ARCH=riscv revyos_defconfig\nmake CROSS_COMPILE=riscv64-unknown-linux-gnu- ARCH=riscv -j$(nproc)\nmake CROSS_COMPILE=riscv64-unknown-linux-gnu- ARCH=riscv -j$(nproc) dtbs\nsudo make CROSS_COMPILE=riscv64-unknown-linux-gnu- ARCH=riscv INSTALL_MOD_PATH=../rootfs/ modules_install -j$(nproc)\nsudo make CROSS_COMPILE=riscv64-unknown-linux-gnu- ARCH=riscv INSTALL_PATH=../rootfs/boot zinstall -j$(nproc)\n# build perf (if needed)\nmake CROSS_COMPILE=riscv64-unknown-linux-gnu- ARCH=riscv LDFLAGS=-static NO_LIBELF=1 NO_JVMTI=1 VF=1 -C tools/perf/\nsudo cp -v tools/perf/perf ../rootfs/sbin/perf-thead\n# Install Kernel\nsudo cp -v arch/riscv/boot/Image ../rootfs/boot/\n# Install DTB\nsudo cp -v arch/riscv/boot/dts/thead/light-lpi4a.dtb ../rootfs/boot/\nsudo cp -v arch/riscv/boot/dts/thead/light-lpi4a-dsi0-hdmi.dtb ../rootfs/boot/\n"})}),"\n",(0,s.jsx)(n.p,{children:'After all build steps, you can copy or override kernel and module files on your board using files in "rootfs", If you replace kernel with new one please make sure you also replace with corresponding kernel module folder.'})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>l});var r=o(6540);const s={},i=r.createContext(s);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);