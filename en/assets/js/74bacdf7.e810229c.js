"use strict";(self.webpackChunkrevyos_docs_new=self.webpackChunkrevyos_docs_new||[]).push([[5189],{8195:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"benchmark/coremark","title":"CoreMark","description":"Summary","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/benchmark/coremark.md","sourceDirName":"benchmark","slug":"/benchmark/coremark","permalink":"/revyos-docs-new/en/docs/benchmark/coremark","draft":false,"unlisted":false,"editUrl":"https://github.com/kagura114/revyos-docs-new/docs/benchmark/coremark.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentSidebar","previous":{"title":"Chromium WebGL Test","permalink":"/revyos-docs-new/en/docs/benchmark/Chromium-Fish-Bowl-Test"},"next":{"title":"glmark2","permalink":"/revyos-docs-new/en/docs/benchmark/glmark2"}}');var a=r(4848),o=r(8453);const i={},s="CoreMark",c={},l=[{value:"Summary",id:"summary",level:2},{value:"Test Items Overview",id:"test-items-overview",level:2},{value:"File Structure",id:"file-structure",level:3},{value:"Make Targets",id:"make-targets",level:3},{value:"Compilation and Execution",id:"compilation-and-execution",level:3},{value:"Test Plan",id:"test-plan",level:2},{value:"Execution Steps",id:"execution-steps",level:2},{value:"Test Results",id:"test-results",level:3},{value:"GCC 10.4 + xtheadc",id:"gcc-104--xtheadc",level:3},{value:"GCC 13.1 + xthead matrix",id:"gcc-131--xthead-matrix",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"coremark",children:"CoreMark"})}),"\n",(0,a.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,a.jsx)(n.p,{children:"CoreMark is a comprehensive benchmark designed to measure CPU performance in embedded systems. Developed in 2009 by Shay Gal-On of EEMBC, it aims to be an industry standard, replacing the outdated Dhrystone benchmark. The code, written in C, includes the following algorithms: list processing (insert, delete, find, and sort), matrix operations (common matrix functions), state machines (checking if an input stream contains valid numbers), and CRC. Users can freely download CoreMark, port it to their platform, and obtain performance scores."}),"\n",(0,a.jsx)(n.h2,{id:"test-items-overview",children:"Test Items Overview"}),"\n",(0,a.jsx)(n.h3,{id:"file-structure",children:"File Structure"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"\u251c\u2500\u2500 barebones      -- Directory for modifications when porting to a bare-metal environment\n\u2502   \u251c\u2500\u2500 core_portme.c        -- Target platform configuration information for porting\n\u2502   \u251c\u2500\u2500 core_portme.h        -- Timer and board initialization implementation\n\u2502   \u251c\u2500\u2500 core_portme.mak      -- Makefile for this subdirectory\n\u2502   \u251c\u2500\u2500 cvt.c\n\u2502   \u2514\u2500\u2500 ee_printf.c          -- Serial implementation of print function\n\u251c\u2500\u2500 core_list_join.c    -- List operation program\n\u251c\u2500\u2500 core_main.c         -- Main program\n\u251c\u2500\u2500 coremark.h          -- Header file with project configuration and data structure definitions\n\u251c\u2500\u2500 coremark.md5        \n\u251c\u2500\u2500 core_matrix.c       -- Matrix operations program\n\u251c\u2500\u2500 core_state.c        -- State machine control program\n\u251c\u2500\u2500 core_util.c         -- CRC calculation program\n\u251c\u2500\u2500 cygwin              -- Test code for x86 Cygwin and GCC 3.4 (quad-core, dual-core, and single-core systems)\n\u2502   \u251c\u2500\u2500 core_portme.c\n\u2502   \u251c\u2500\u2500 core_portme.h\n\u2502   \u2514\u2500\u2500 core_portme.mak\n\u251c\u2500\u2500 freebsd             -- Similarly, test code for various OS platforms\n\u2502   \u251c\u2500\u2500 ...\n\u251c\u2500\u2500 LICENSE.md\n\u251c\u2500\u2500 linux\n\u2502   \u251c\u2500\u2500 ...\n\u251c\u2500\u2500 linux64\n\u2502   \u251c\u2500\u2500 ...\n\u251c\u2500\u2500 macos\n\u2502   \u251c\u2500\u2500 ...\n\u251c\u2500\u2500 Makefile            \n\u251c\u2500\u2500 README.md           -- Readme file with basic introduction to the CoreMark project\n\u251c\u2500\u2500 rtems\n\u2502   \u251c\u2500\u2500 ...\n\u2514\u2500\u2500 simple\n    \u251c\u2500\u2500 ...\n    \u2514\u2500\u2500\n"})}),"\n",(0,a.jsx)(n.h3,{id:"make-targets",children:"Make Targets"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"run"})," - Default target, generates ",(0,a.jsx)(n.code,{children:"run1.log"})," and ",(0,a.jsx)(n.code,{children:"run2.log"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"run1.log"})," - Runs the benchmark with performance parameters and outputs to ",(0,a.jsx)(n.code,{children:"run1.log"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"run2.log"})," - Runs the benchmark with validation parameters and outputs to ",(0,a.jsx)(n.code,{children:"run2.log"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"run3.log"})," - Runs the benchmark with config file-generated parameters and outputs to ",(0,a.jsx)(n.code,{children:"run3.log"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"compile"})," - Compiles the benchmark executable"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"link"})," - Links the benchmark executable"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"check"})," - Tests the MD5 of unmodified source files"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"clean"})," - Cleans temporary files"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"compilation-and-execution",children:"Compilation and Execution"}),"\n",(0,a.jsxs)(n.p,{children:["According to the README, simply executing ",(0,a.jsx)(n.code,{children:"make"})," in the coremark folder compiles and runs the tests. The results appear in the Results folder, with ",(0,a.jsx)(n.code,{children:"run1.log"})," containing the performance results."]}),"\n",(0,a.jsx)(n.h2,{id:"test-plan",children:"Test Plan"}),"\n",(0,a.jsx)(n.p,{children:"CoreMark tests are generally short. Plan to run 10 tests concurrently and take the average score."}),"\n",(0,a.jsx)(n.h2,{id:"execution-steps",children:"Execution Steps"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ git clone https://github.com/eembc/coremark.git\n$ cd coremark\n$ make\n"})}),"\n",(0,a.jsx)(n.h3,{id:"test-results",children:"Test Results"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"2K performance run parameters for coremark.\nCoreMark Size    : 666\nTotal ticks      : 12915\nTotal time (secs): 12.915000\nIterations/Sec   : 8517.228029\nIterations       : 110000\nCompiler version : GCC13.1.0\nCompiler flags   : -O2 -DPERFORMANCE_RUN=1  -lrt\nMemory location  : Please put data memory location here\n\t\t\t(e.g. code in flash, data on heap etc)\nseedcrc          : 0xe9f5\n[0]crclist       : 0xe714\n[0]crcmatrix     : 0x1fd7\n[0]crcstate      : 0x8e3a\n[0]crcfinal      : 0x33ff\nCorrect operation validated. See README.md for run and reporting rules.\nCoreMark 1.0 : 8517.228029 / GCC13.1.0 -O2 -DPERFORMANCE_RUN=1  -lrt / Heap\n"})}),"\n",(0,a.jsx)(n.h3,{id:"gcc-104--xtheadc",children:"GCC 10.4 + xtheadc"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'make XCFLAGS="-march=rv64gv0p7_zfh_xtheadc -O3 -funroll-all-loops -finline-limit=500 -fgcse-sm -fno-schedule-insns  -msignedness-cmpiv -fno-code-hoisting -mno-thread-jumps1 -mno-iv-adjust-addr-cost -mno-expand-split-imm"\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"2K performance run parameters for coremark.\nCoreMark Size    : 666\nTotal ticks      : 15129\nTotal time (secs): 15.129000\nIterations/Sec   : 13219.644392\nIterations       : 200000\nCompiler version : GCC10.4.0\nCompiler flags   : -O2 -march=rv64gv0p7_zfh_xtheadc -O3 -funroll-all-loops -finline-limit=500 -fgcse-sm -fno-schedule-insns  -msignedness-cmpiv -fno-code-hoisting -mno-thread-jumps1 -mno-iv-adjust-addr-cost -mno-expand-split-imm -DPERFORMANCE_RUN=1  -lrt\nMemory location  : Please put data memory location here\n                        (e.g. code in flash, data on heap etc)\nseedcrc          : 0xe9f5\n[0]crclist       : 0xe714\n[0]crcmatrix     : 0x1fd7\n[0]crcstate      : 0x8e3a\n[0]crcfinal      : 0x4983\nCorrect operation validated. See README.md for run and reporting rules.\nCoreMark 1.0 : 13219.644392 / GCC10.4.0 -O2 -march=rv64gv0p7_zfh_xtheadc -O3 -funroll-all-loops -finline-limit=500 -fgcse-sm -fno-schedule-insns  -msignedness-cmpiv -fno-code-hoisting -mno-thread-jumps1 -mno-iv-adjust-addr-cost -mno-expand-split-imm -DPERFORMANCE_RUN=1  -lrt / Heap\n"})}),"\n",(0,a.jsx)(n.h3,{id:"gcc-131--xthead-matrix",children:"GCC 13.1 + xthead matrix"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'make XCFLAGS="-march=rv64imafd_xtheadba_xtheadbb_xtheadbs_xtheadcmo_xtheadcondmov_xtheadfmemidx_xtheadfmv_xtheadint_xtheadmac_xtheadmemidx_xtheadmempair_xtheadsync -O3 -funroll-all-loops -finline-limit=500 -fgcse-sm -fno-schedule-insns -fno-code-hoisting -mno-thread-jumps"\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"2K performance run parameters for coremark.\nCoreMark Size    : 666\nTotal ticks      : 11897\nTotal time (secs): 11.897000\nIterations/Sec   : 9246.028411\nIterations       : 110000\nCompiler version : GCC13.1.0\nCompiler flags   : -O2 -march=rv64imafd_xtheadba_xtheadbb_xtheadbs_xtheadcmo_xtheadcondmov_xtheadfmemidx_xtheadfmv_xtheadint_xtheadmac_xtheadmemidx_xtheadmempair_xtheadsync -O3 -funroll-all-loops -finline-limit=500 -fgcse-sm -fno-schedule-insns -fno-code-hoisting -DPERFORMANCE_RUN=1  -lrt\nMemory location  : Please put data memory location here\n\t\t\t(e.g. code in flash, data on heap etc)\nseedcrc          : 0xe9f5\n[0]crclist       : 0xe714\n[0]crcmatrix     : 0x1fd7\n[0]crcstate      : 0x8e3a\n[0]crcfinal      : 0x33ff\nCorrect operation validated. See README.md for run and reporting rules.\nCoreMark 1.0 : 9246.028411 / GCC13.1.0 -O2 -march=rv64imafd_xtheadba_xtheadbb_xtheadbs_xtheadcmo_xtheadcondmov_xtheadfmemidx_xtheadfmv_xtheadint_xtheadmac_xtheadmemidx_xtheadmempair_xtheadsync -O3 -funroll-all-loops -finline-limit=500 -fgcse-sm -fno-schedule-insns -fno-code-hoisting -DPERFORMANCE_RUN=1  -lrt / Heap\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>s});var t=r(6540);const a={},o=t.createContext(a);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);